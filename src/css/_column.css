@charset "utf-8";

:root {
    --col-gutter: 3vw;
    --col-width: calc( (100% / 12) );
};

.element-col {
    display: flex;
    /* justify-content: space-between;

    & > [class^="element-col_"],
    & > [class*="element-col_ "] {
        box-sizing: border-box;
    }

    & .element-col_1  { width: calc( (1  * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_2  { width: calc( (2  * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_3  { width: calc( (3  * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_4  { width: calc( (4  * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_5  { width: calc( (5  * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_6  { width: calc( (6  * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_7  { width: calc( (7  * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_8  { width: calc( (8  * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_9  { width: calc( (9  * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_10 { width: calc( (10 * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_11 { width: calc( (11 * var(--col-width)) - var(--col-gutter) ); }
    & .element-col_12 { width: calc( (12 * var(--col-width)) - var(--col-gutter) ); }

    &.is_noGutter {
        justify-content: flex-start;
        & .element-col_1  { width: calc( 1  * var(--col-width) ); }
        & .element-col_2  { width: calc( 2  * var(--col-width) ); }
        & .element-col_3  { width: calc( 3  * var(--col-width) ); }
        & .element-col_4  { width: calc( 4  * var(--col-width) ); }
        & .element-col_5  { width: calc( 5  * var(--col-width) ); }
        & .element-col_6  { width: calc( 6  * var(--col-width) ); }
        & .element-col_7  { width: calc( 7  * var(--col-width) ); }
        & .element-col_8  { width: calc( 8  * var(--col-width) ); }
        & .element-col_9  { width: calc( 9  * var(--col-width) ); }
        & .element-col_10 { width: calc( 10 * var(--col-width) ); }
        & .element-col_11 { width: calc( 11 * var(--col-width) ); }
        & .element-col_12 { width: calc( 12 * var(--col-width) ); }
    }

    &.is_around {
        justify-content: space-around;
    } */


    justify-content: flex-start;
    margin-left: calc( var(--col-gutter) / 2 * (-1) );
    margin-right: calc( var(--col-gutter) / 2 * (-1) );

    & > [class^="element-col_"],
    & > [class*="element-col_ "] {
        box-sizing: border-box;
        padding-left: calc( var(--col-gutter) / 2 );
        padding-right: calc( var(--col-gutter) / 2 );
    }
    & .element-col_1  { width: calc( 1  * var(--col-width) ); }
    & .element-col_2  { width: calc( 2  * var(--col-width) ); }
    & .element-col_3  { width: calc( 3  * var(--col-width) ); }
    & .element-col_4  { width: calc( 4  * var(--col-width) ); }
    & .element-col_5  { width: calc( 5  * var(--col-width) ); }
    & .element-col_6  { width: calc( 6  * var(--col-width) ); }
    & .element-col_7  { width: calc( 7  * var(--col-width) ); }
    & .element-col_8  { width: calc( 8  * var(--col-width) ); }
    & .element-col_9  { width: calc( 9  * var(--col-width) ); }
    & .element-col_10 { width: calc( 10 * var(--col-width) ); }
    & .element-col_11 { width: calc( 11 * var(--col-width) ); }
    & .element-col_12 { width: calc( 12 * var(--col-width) ); }

    &.is_around {
        justify-content: space-around;
        margin-left: 0;
        margin-right: 0;
    }

    &.is_between {
        justify-content: space-between;
        margin-left: 0;
        margin-right: 0;
    }

    &.is_noGutter {
        margin-left: 0;
        margin-right: 0;
        & > [class^="element-col_"],
        & > [class*="element-col_ "] {
            padding-left: 0;
            padding-right: 0;
        }
    }

}

/* @for $i from 1 to 12 {
    .element-col_$i {
        width: calc( ($i * var(--col-width)) - var(--col-gutter) );
    }
} */
